/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.kma.sms.ui;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RadialGradientPaint;
import java.awt.RenderingHints;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.Properties;

import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import com.kma.sms.controller.StudentManagePanelController;
import com.kma.sms.controller.studentpopup.StudentDeleterController;
import com.kma.sms.ui.studentpopup.*;

/**
 *
 * @author lxsgo
 */
public class StudentManagePanel extends javax.swing.JPanel {

    // @Override
    // protected void paintComponent(Graphics grphcs) {
    //     super.paintComponent(grphcs);
    //     Graphics2D g2d = (Graphics2D) grphcs;
    //     g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

    //     // Load the properties file
    //     Properties prop = new Properties();
    //     try (InputStream input = new FileInputStream("src/main/resources/background.properties")) {
    //         prop.load(input);
    //     } catch (IOException ex) {
    //         ex.printStackTrace();
    //     }

    //     // Extract and parse the color values
    //     Color[] colors = new Color[3];
    //     String[] colorStrings = prop.getProperty("colors_set_2").split(", "); // Change this to use different color sets
    //     for (int i = 0; i < colorStrings.length; i++) {
    //         colors[i] = Color.decode(colorStrings[i]);
    //     }

    //     int diameter = Math.max(getWidth(), getHeight());
    //     float radius = diameter * 1.0f; // Increase the radius
    //     float[] dist = { 0.0f, 0.5f, 1.0f };
    //     RadialGradientPaint rgp = new RadialGradientPaint(getWidth() - 50, getHeight() - 50, radius, dist, colors);

    //     g2d.setPaint(rgp);
    //     g2d.fillRect(0, 0, getWidth(), getHeight());
    // }

    /**
     * Creates new form StudentManagePanel
     */
    public StudentManagePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        editItem = new javax.swing.JMenuItem();
        deleteItem = new javax.swing.JMenuItem();
        studentIdInput = new javax.swing.JTextField();
        classIdInput = new javax.swing.JTextField();
        studentNameInput = new javax.swing.JTextField();
        studentIdlabel = new javax.swing.JLabel();
        classIdLabel = new javax.swing.JLabel();
        studentNameLabel = new javax.swing.JLabel();
        searchStudentButton = new javax.swing.JButton();
        genderInput = new javax.swing.JComboBox<>();
        genderLabel = new javax.swing.JLabel();
        addressInput = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        tableScrollPane = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();

        /* BELOW IS THE CODE FOR CUSTOMIZING THE TABLE */
        // Set the header color
        JTableHeader header = studentTable.getTableHeader();
        header.setBackground(Color.decode("#8B0000"));
        header.setForeground(Color.WHITE);

        // Set the row color
        Color color1 = Color.decode("#E0E0E0");
        Color color2 = Color.WHITE; // Replace with the actual color you want
        
        studentTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(row % 2 == 0 ? color1 : color2);
                if (isSelected) {
                    c.setBackground(Color.decode("#2675BF"));
                    c.setForeground(Color.WHITE);
                } else {
                    c.setBackground(row % 2 == 0 ? color1 : color2);
                    c.setForeground(Color.BLACK);
                }
                return c;
            }
        });

        /* END OF CUSTOMIZING THE TABLE */

        addStudentButton = new javax.swing.JButton();
        footerLabel = new javax.swing.JLabel();

        editItem.setText("edit");
        editItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemActionPerformed(evt);
            }
        });
        popupMenu.add(editItem);

        deleteItem.setText("delete");
        deleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemActionPerformed(evt);
            }
        });
        popupMenu.add(deleteItem);

        setPreferredSize(new java.awt.Dimension(500, 540));

        studentIdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIdInputActionPerformed(evt);
            }
        });

        classIdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classIdInputActionPerformed(evt);
            }
        });

        studentNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameInputActionPerformed(evt);
            }
        });

        studentIdlabel.setText("Mã sv:");
        studentIdlabel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentIdlabelFocusLost(evt);
            }
        });

        classIdLabel.setText("Mã lớp:");

        studentNameLabel.setText("Họ tên:");

        searchStudentButton.setText("Search");
        searchStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStudentButtonActionPerformed(evt);
            }
        });

        genderInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Nam", "Nữ" }));
        genderInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderInputActionPerformed(evt);
            }
        });

        genderLabel.setText("Giới tính:");

        addressLabel.setText("Địa chỉ:");

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã sv", "Mã lớp", "Họ tên", "Ngày sinh", "Giới tính", "Địa chỉ", "SĐT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                studentTableMouseReleased(evt);
            }
        });
        studentTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                studentTableComponentResized(evt);
            }
        });
        tableScrollPane.setViewportView(studentTable);

        addStudentButton.setText("Add");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        footerLabel.setText("                        ");
        footerLabel.setEnabled(false);
        footerLabel.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchStudentButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentIdlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(studentIdInput, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(classIdInput)
                    .addComponent(studentNameInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(genderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(genderInput, 0, 140, Short.MAX_VALUE)
                    .addComponent(addressInput))
                .addGap(36, 36, 36)
                .addComponent(addStudentButton)
                .addGap(36, 36, 36))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(footerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableScrollPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(searchStudentButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentIdlabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(classIdLabel)
                                .addComponent(addressLabel)
                                .addComponent(addressInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentNameLabel)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addStudentButton)
                        .addComponent(genderInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(genderLabel)))
                .addGap(18, 18, 18)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footerLabel))
        );

        Dimension preferredSize = footerLabel.getPreferredSize();
        preferredSize.height = 30;
        footerLabel.setPreferredSize(preferredSize);
    }// </editor-fold>//GEN-END:initComponents

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addStudentButtonActionPerformed
        // Show add student popup ui.studentpopup.StudentAdder
        StudentAdder addStudent = new StudentAdder();

        // Set popup menu location, center of the screen
        addStudent.setLocationRelativeTo(this);

        // Add listener for add student popup
        addStudent.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                // Update table
                updateTable();
            }
        });

        // Show popup
        addStudent.setVisible(true);

    }// GEN-LAST:event_addStudentButtonActionPerformed

    private void studentTableComponentResized(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_studentTableComponentResized
        // Get table width
        int tableWidth = studentTable.getWidth();
        // Set column width percent
        int[] columnWidthPercent = { 5, 10, 10, 20, 15, 10, 20, 10 };
        // Set table column width
        for (int i = 0; i < studentTable.getColumnCount(); i++) {
            javax.swing.table.TableColumn column = studentTable.getColumnModel().getColumn(i);
            column.setPreferredWidth(tableWidth * columnWidthPercent[i] / 100);
        }

    }// GEN-LAST:event_studentTableComponentResized

    private void studentIdlabelFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_studentIdlabelFocusLost
        // TODO add your handling code here:
    }// GEN-LAST:event_studentIdlabelFocusLost

    private void genderInputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_genderInputActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_genderInputActionPerformed

    private void studentNameInputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_studentNameInputActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_studentNameInputActionPerformed

    private void studentIdInputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_studentIdInputActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_studentIdInputActionPerformed

    private void editItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editItemActionPerformed
        // Show edit student popup ui.studentpopup.EditStudent1
        StudentEditor editStudent = new StudentEditor();

        // set text for edit student popup
        int row = studentTable.getSelectedRow();
        String studentId = studentTable.getValueAt(row, 1).toString();
        String classId = studentTable.getValueAt(row, 2).toString();
        String studentName = studentTable.getValueAt(row, 3).toString();
        String dateOfBirth = studentTable.getValueAt(row, 4).toString();
        String gender = studentTable.getValueAt(row, 5).toString();
        String address = studentTable.getValueAt(row, 6).toString();
        String telephone = studentTable.getValueAt(row, 7).toString();

        // Set text for edit student popup
        editStudent.setStudentIdEditor(studentId);
        editStudent.setClassIdEditor(classId);
        editStudent.setStudentNameEditor(studentName);
        editStudent.setDateOfBirthEditor(dateOfBirth);
        editStudent.SetGenderEditor(gender);
        editStudent.setAddressEditor(address);
        editStudent.setTelephoneEditor(telephone);

        // Set popup menu location, center of the screen
        editStudent.setLocationRelativeTo(this);

        // Add listener for edit student popup
        editStudent.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                // Update table
                updateTable();
            }
        });

        // Show popup
        editStudent.setVisible(true);

    }// GEN-LAST:event_editItemActionPerformed

    private void studentTableMouseReleased(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_studentTableMouseReleased
        // Show popup menu
        if (evt.isPopupTrigger()) {
            // Get coordinates of mouse click
            int row = studentTable.rowAtPoint(evt.getPoint());
            // Select row
            studentTable.setRowSelectionInterval(row, row);
            // Show popup menu
            popupMenu.show(studentTable, evt.getX(), evt.getY());

        }

    }// GEN-LAST:event_studentTableMouseReleased

    private void deleteItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteItemActionPerformed
        String studentId = studentTable.getValueAt(studentTable.getSelectedRow(), 1).toString();
        String studentName = studentTable.getValueAt(studentTable.getSelectedRow(), 3).toString();
        String message = "<html><div style='text-align: center;'>"
                + "Bạn có chắc muốn xóa sinh viên " + studentId + " - " + studentName + "?<br>"
                + "Lưu ý: Toàn bộ thông tin liên quan đến sinh viên này sẽ bị xóa<br>"
                + "và không thể hoàn tác."
                + "</div></html>";

        javax.swing.JLabel messageLabel = new javax.swing.JLabel(message);
        int option = javax.swing.JOptionPane.showConfirmDialog(null, messageLabel, "Xác nhận xóa",
                javax.swing.JOptionPane.YES_NO_OPTION);

        // If user click yes
        if (option == javax.swing.JOptionPane.YES_OPTION) {
            // Delete student
            String result = StudentDeleterController.getStudentDeleteMessage(studentId);
            // Show result
            javax.swing.JOptionPane.showMessageDialog(null, result);
            // Update table
            updateTable();
        }

    }// GEN-LAST:event_deleteItemActionPerformed

    private void searchStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchStudentButtonActionPerformed
        updateTable();

    }// GEN-LAST:event_searchStudentButtonActionPerformed

    private void classIdInputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_classIdInputActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_classIdInputActionPerformed

    public void updateTable() {
        // Get input
        String studentId = studentIdInput.getText();
        String classId = classIdInput.getText();
        String studentName = studentNameInput.getText();
        // Get gender from combobox
        String gender = genderInput.getSelectedItem().toString();
        String address = addressInput.getText();

        // Get result
        List<List<String>> result = StudentManagePanelController.getStudentListString(studentId, classId, studentName,
                "", "", gender, address, "");
        // Set table row count
        DefaultTableModel model = (DefaultTableModel) studentTable.getModel();
        model.setRowCount(result.size());

        // Display result
        for (int i = 0; i < result.size(); i++) {
            List<String> studentString = result.get(i);
            // Display order number
            studentString.add(0, Integer.toString(i + 1));
            for (int j = 0; j < studentString.size(); j++) {
                studentTable.setValueAt(studentString.get(j), i, j);
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudentButton;
    private javax.swing.JTextField addressInput;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField classIdInput;
    private javax.swing.JLabel classIdLabel;
    private javax.swing.JMenuItem deleteItem;
    private javax.swing.JMenuItem editItem;
    private javax.swing.JLabel footerLabel;
    private javax.swing.JComboBox<String> genderInput;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JButton searchStudentButton;
    private javax.swing.JTextField studentIdInput;
    private javax.swing.JLabel studentIdlabel;
    private javax.swing.JTextField studentNameInput;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JTable studentTable;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables

}
