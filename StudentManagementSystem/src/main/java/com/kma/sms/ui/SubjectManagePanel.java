/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.kma.sms.ui;

import java.awt.Dimension;
import java.util.List;
import com.kma.sms.controller.SubjectManagePanelController;
import com.kma.sms.controller.subjectpopup.SubjectDeleterController;
import com.kma.sms.ui.subjectpopup.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lxsgo
 */
public class SubjectManagePanel extends javax.swing.JPanel {

    /**
     * Creates new form SubjectManagePanel
     */
    public SubjectManagePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        editItem = new javax.swing.JMenuItem();
        deleteItem = new javax.swing.JMenuItem();
        subjectIdInput = new javax.swing.JTextField();
        subjectNameInput = new javax.swing.JTextField();
        majorIdInput = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectTable = new javax.swing.JTable();
        searchSubjectButton = new javax.swing.JButton();
        creditsInput = new javax.swing.JTextField();
        addSubjectButton = new javax.swing.JButton();
        subjectIdLabel = new javax.swing.JLabel();
        majorIdLabel = new javax.swing.JLabel();
        subjectNameLabel = new javax.swing.JLabel();
        creditsLabel = new javax.swing.JLabel();
        footerLabel = new javax.swing.JLabel();

        editItem.setText("edit");
        editItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemActionPerformed(evt);
            }
        });
        popupMenu.add(editItem);

        deleteItem.setText("delete");
        deleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemActionPerformed(evt);
            }
        });
        popupMenu.add(deleteItem);

        setPreferredSize(new java.awt.Dimension(600, 1000));
        setVerifyInputWhenFocusTarget(false);

        subjectIdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectIdInputActionPerformed(evt);
            }
        });

        subjectNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectNameInputActionPerformed(evt);
            }
        });

        majorIdInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "CB", "AT", "CT", "DT" }));
        majorIdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                majorIdInputActionPerformed(evt);
            }
        });

        subjectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã học phần", "Mã ngành", "Tên học phần", "Số tín chỉ"
            }
        ));
        subjectTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                subjectTableMouseReleased(evt);
            }
        });
        subjectTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                subjectTableComponentResized(evt);
            }
        });
        jScrollPane1.setViewportView(subjectTable);

        searchSubjectButton.setText("Search");
        searchSubjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSubjectButtonActionPerformed(evt);
            }
        });

        creditsInput.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        creditsInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditsInputActionPerformed(evt);
            }
        });

        addSubjectButton.setText("Add");
        addSubjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubjectButtonActionPerformed(evt);
            }
        });

        subjectIdLabel.setText("Mã hp:");

        majorIdLabel.setText("Mã ngành:");

        subjectNameLabel.setText("Tên hp:");

        creditsLabel.setText("Số tín:");

        footerLabel.setText("                              ");
        footerLabel.setEnabled(false);
        footerLabel.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchSubjectButton)
                        .addGap(36, 36, 36))
                    .addComponent(footerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(majorIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subjectNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subjectIdLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(subjectIdInput)
                    .addComponent(subjectNameInput)
                    .addComponent(majorIdInput, 0, 140, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(creditsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(creditsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(addSubjectButton)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchSubjectButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addSubjectButton)
                        .addComponent(creditsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(creditsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(subjectIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectIdLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(subjectNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(majorIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(majorIdLabel))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(footerLabel))
        );

        Dimension preferredSize = footerLabel.getPreferredSize();
        preferredSize.height = 30;
        footerLabel.setPreferredSize(preferredSize);
    }// </editor-fold>//GEN-END:initComponents

    private void subjectNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectNameInputActionPerformed

    private void majorIdInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_majorIdInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_majorIdInputActionPerformed

    private void subjectIdInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectIdInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectIdInputActionPerformed

    private void searchSubjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSubjectButtonActionPerformed
        
        String subjectId = subjectIdInput.getText();
        String majorId = majorIdInput.getSelectedItem().toString();
        String subjectName = subjectNameInput.getText();
        String credits = creditsInput.getText();
        
        System.out.println(subjectId);
        System.out.println(majorId);
        System.out.println(subjectName);
        System.out.println(credits);
        
        List<List<String>> result = SubjectManagePanelController.getSubjectListString(subjectId,majorId,subjectName,credits);
        DefaultTableModel model = (DefaultTableModel) subjectTable.getModel();
        model.setRowCount(result.size());
        for (int i = 0; i < result.size(); i++) {
            List<String> subjectString = result.get(i);
            // Display order number
            subjectString.add(0, Integer.toString(i + 1));
            for (int j = 0; j < subjectString.size(); j++) {
                subjectTable.setValueAt(subjectString.get(j), i, j);
            }
        }
    }//GEN-LAST:event_searchSubjectButtonActionPerformed

    private void creditsInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditsInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditsInputActionPerformed

    private void addSubjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubjectButtonActionPerformed
        // TODO add your handling code here:
        SubjectAdder addSubject = new SubjectAdder();
        addSubject.setLocationRelativeTo(this);
        // Add listener for add student popup
        addSubject.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                // Update table
                updateTable();
            }
        });

        // Show popup
        addSubject.setVisible(true);

    }//GEN-LAST:event_addSubjectButtonActionPerformed

    private void subjectTableComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_subjectTableComponentResized
        // TODO add your handling code here:
        int tableWidth = subjectTable.getWidth();
        int[] columnWidthPercent = { 5, 20, 20, 40, 15 };
        for (int i = 0; i < subjectTable.getColumnCount(); i++) {
            javax.swing.table.TableColumn column = subjectTable.getColumnModel().getColumn(i);
            column.setPreferredWidth(tableWidth * columnWidthPercent[i] / 100);
        }
    }//GEN-LAST:event_subjectTableComponentResized

    private void subjectTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectTableMouseReleased
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            // Get coordinates of mouse click
            int row = subjectTable.rowAtPoint(evt.getPoint());
            // Select row
            subjectTable.setRowSelectionInterval(row, row);
            // Show popup menu
            popupMenu.show(subjectTable, evt.getX(), evt.getY());

        }
    }//GEN-LAST:event_subjectTableMouseReleased

    private void editItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemActionPerformed
        // TODO add your handling code here:
        SubjectEditor editSubject = new SubjectEditor();
        int row = subjectTable.getSelectedRow();
        String subjectIdOld = subjectTable.getValueAt(row, 1).toString();
        String subjectId = subjectTable.getValueAt(row, 1).toString();
        String majorId = subjectTable.getValueAt(row, 2).toString();
        String subjectName = subjectTable.getValueAt(row, 3).toString();
        String credits = subjectTable.getValueAt(row, 4).toString();
        
        editSubject.setSubjectIdOld(subjectIdOld);
        editSubject.setSubjectIdEditor(subjectId);
        editSubject.setMajorIdEditor(majorId);
        editSubject.setSubjectNameEditor(subjectName);
        editSubject.setCreditsEditor(credits);
        
        editSubject.setLocationRelativeTo(this);


        // Add listener for edit student popup
        editSubject.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                // Update table
                updateTable();
            }
        });

        // Show popup
        editSubject.setVisible(true);
    }//GEN-LAST:event_editItemActionPerformed

    private void deleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemActionPerformed
        // TODO add your handling code here:
        String subjectId = subjectTable.getValueAt(subjectTable.getSelectedRow(), 1).toString();
        String subjectName = subjectTable.getValueAt(subjectTable.getSelectedRow(), 3).toString();
        String message = "<html><div style='text-align: center;'>"
            + "Bạn có chắc muốn xóa học phần " + subjectId + " - " + subjectName + "?<br>"
            + "Lưu ý: Toàn bộ thông tin liên quan đến học phần này sẽ bị xóa<br>"
            + "và không thể hoàn tác."
            + "</div></html>";

        javax.swing.JLabel messageLabel = new javax.swing.JLabel(message);
        int option = javax.swing.JOptionPane.showConfirmDialog(null, messageLabel, "Xác nhận xóa",
            javax.swing.JOptionPane.YES_NO_OPTION);

        // If user click yes
        if (option == javax.swing.JOptionPane.YES_OPTION) {
            // Delete student
            String result = SubjectDeleterController.getSubjectDeleteMessage(subjectId);
            // Show result
            javax.swing.JOptionPane.showMessageDialog(null, result);
            // Update table
            updateTable();
        }
        
    }//GEN-LAST:event_deleteItemActionPerformed

    public void updateTable(){
        String subjectId = subjectIdInput.getText();
        String majorId = majorIdInput.getSelectedItem().toString();
        String subjectName = subjectNameInput.getText();
        String credits = creditsInput.getText();
        
        List<List<String>> result = SubjectManagePanelController.getSubjectListString(subjectId,majorId,subjectName,credits);
        DefaultTableModel model = (DefaultTableModel) subjectTable.getModel();
        model.setRowCount(result.size());

        // Display result
        for (int i = 0; i < result.size(); i++) {
            List<String> studentString = result.get(i);
            // Display order number
            studentString.add(0, Integer.toString(i + 1));
            for (int j = 0; j < studentString.size(); j++) {
                subjectTable.setValueAt(studentString.get(j), i, j);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSubjectButton;
    private javax.swing.JTextField creditsInput;
    private javax.swing.JLabel creditsLabel;
    private javax.swing.JMenuItem deleteItem;
    private javax.swing.JMenuItem editItem;
    private javax.swing.JLabel footerLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> majorIdInput;
    private javax.swing.JLabel majorIdLabel;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JButton searchSubjectButton;
    private javax.swing.JTextField subjectIdInput;
    private javax.swing.JLabel subjectIdLabel;
    private javax.swing.JTextField subjectNameInput;
    private javax.swing.JLabel subjectNameLabel;
    private javax.swing.JTable subjectTable;
    // End of variables declaration//GEN-END:variables
}
