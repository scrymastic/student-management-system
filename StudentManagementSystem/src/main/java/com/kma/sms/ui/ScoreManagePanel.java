/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.kma.sms.ui;

import com.kma.sms.controller.ScoreManagePanelController;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author lxsgo
 */
public class ScoreManagePanel extends javax.swing.JPanel {

    /**
     * Creates new form ScoreManagePanel
     */
    public ScoreManagePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentIdLabel = new javax.swing.JLabel();
        studentIdInput = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        gpaLabel = new javax.swing.JLabel();
        gpaTextField = new javax.swing.JTextField();
        subjectIdTextField = new javax.swing.JTextField();
        scoreTextField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        insertButton = new javax.swing.JButton();
        footerLabel = new javax.swing.JLabel();
        studentNameLabel = new javax.swing.JLabel();
        studentNameTextField = new javax.swing.JTextField();
        scoreTableScrollPane = new javax.swing.JScrollPane();
        scoreTable = new javax.swing.JTable();
        subjectNameTextField = new javax.swing.JTextField();


        /* BELOW IS THE CODE FOR CUSTOMIZING THE TABLE */
        // Set the header color
        JTableHeader header = scoreTable.getTableHeader();
        header.setBackground(Color.decode("#8B0000"));
        header.setForeground(Color.WHITE);

        // Set the row color
        Color color1 = Color.decode("#E0E0E0");
        Color color2 = Color.WHITE; // Replace with the actual color you want
        
        scoreTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(row % 2 == 0 ? color1 : color2);
                if (isSelected) {
                    c.setBackground(Color.decode("#2675BF"));
                    c.setForeground(Color.WHITE);
                } else {
                    c.setBackground(row % 2 == 0 ? color1 : color2);
                    c.setForeground(Color.BLACK);
                }
                return c;
            }
        });

        /* END OF CUSTOMIZING THE TABLE */

        setPreferredSize(new java.awt.Dimension(500, 540));

        studentIdLabel.setText("Mã sv:");

        studentIdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIdInputActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        gpaLabel.setText("GPA:");

        gpaTextField.setEditable(false);
        gpaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gpaTextFieldActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        footerLabel.setText("                              ");
        footerLabel.setEnabled(false);
        footerLabel.setFocusable(false);

        studentNameLabel.setText("Tên sv:");

        studentNameTextField.setEditable(false);

        scoreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã môn", "Tên môn", "Điểm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scoreTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scoreTableMouseClicked(evt);
            }
        });
        scoreTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                scoreTableComponentResized(evt);
            }
        });
        scoreTableScrollPane.setViewportView(scoreTable);

        subjectNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectNameTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(560, 560, 560)
                .addComponent(footerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(gpaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(studentIdInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(gpaTextField)
                            .addComponent(studentNameTextField))
                        .addGap(18, 104, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(subjectIdTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(scoreTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(subjectNameTextField))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteButton)
                            .addComponent(updateButton)
                            .addComponent(insertButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchButton)))
                .addGap(36, 36, 36))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scoreTableScrollPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton)
                    .addComponent(studentIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(studentNameLabel)
                    .addComponent(studentNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gpaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scoreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertButton)
                    .addComponent(gpaLabel))
                .addGap(18, 18, 18)
                .addComponent(scoreTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(footerLabel)
                .addGap(0, 0, 0))
        );

        Dimension preferredSize = footerLabel.getPreferredSize();
        preferredSize.height = 30;
        footerLabel.setPreferredSize(preferredSize);
    }// </editor-fold>//GEN-END:initComponents

    private void subjectNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectNameTextFieldActionPerformed

    private void scoreTableComponentResized(java.awt.event.ComponentEvent evt) {                                            
        // resize column width
        int tW = scoreTable.getWidth();
        javax.swing.table.TableColumn column;
        // percent of column width
        int[] colWidthPercent = { 5, 25, 50, 20 };

        for (int i = 0; i < scoreTable.getColumnCount(); i++) {
            column = scoreTable.getColumnModel().getColumn(i);
            int pWidth = Math.round((float) colWidthPercent[i] / 100 * tW);
            column.setPreferredWidth(pWidth);
        }

    }                                            


    private void studentIdInputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_studentIdInputActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_studentIdInputActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchButtonActionPerformed
        String studentId = studentIdInput.getText();

        List<List<String>> result = ScoreManagePanelController.getScoreListString(studentId);
        // Set table row count
        DefaultTableModel model = (DefaultTableModel) scoreTable.getModel();
        model.setRowCount(result.size());

        // update table
        updateTable();

    }// GEN-LAST:event_searchButtonActionPerformed

    private void gpaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_gpaTextFieldActionPerformed

        // String studentId = txt_studentid.getText();
        // String gpa=ScoreManagePanelController.getgpa(studentId);
        // txtgpa.setText(gpa);

    }// GEN-LAST:event_gpaTextFieldActionPerformed

    private void scoreTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_scoreTableMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel) scoreTable.getModel();
        int SelectedRows = scoreTable.getSelectedRow();
        // get data and check null
        Object id = RecordTable.getValueAt(SelectedRows, 1);
        Object name = RecordTable.getValueAt(SelectedRows, 2);
        Object score = RecordTable.getValueAt(SelectedRows, 3);
        
        if (id == null) {
            subjectIdTextField.setText("");
        } else {
            subjectIdTextField.setText(id.toString());
        }
        if (name == null) {
            subjectNameTextField.setText("");
        } else {
            subjectNameTextField.setText(name.toString());
        }
        if (score == null) {
            scoreTextField.setText("");
        } else {
            scoreTextField.setText(score.toString());
        }
   
    }// GEN-LAST:event_scoreTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_updateButtonActionPerformed
        String sujectId = subjectIdTextField.getText();
        String subjectName = subjectNameTextField.getText();
        String score = scoreTextField.getText();
        String mes = ScoreManagePanelController.getStudentEditMessage(sujectId, subjectName, score);
        JOptionPane.showMessageDialog(this, mes);

        // update table
        updateTable();
    }// GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteButtonActionPerformed
        String sujectId = subjectIdTextField.getText();
        String subjectName = subjectNameTextField.getText();
        String score = scoreTextField.getText();
        String studentId = studentIdInput.getText();
        // Show warning message if subjectId is not empty
        if (sujectId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn môn học cần xóa điểm!");
            return;
        }
        String warningMessage = "<html><div style='text-align: center;'>"
                + "Bạn có chắc chắn muốn xóa điểm môn " + subjectName + "<br>" 
                + "của sinh viên có mã số " + studentId + " không?" + "</div></html>";
        int option = JOptionPane.showConfirmDialog(this, warningMessage, "Xóa điểm", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            String message = ScoreManagePanelController.getStudentDeleteMessage(studentId, sujectId, subjectName, score);
            JOptionPane.showMessageDialog(this, message);
            // update table
            updateTable();
        }

    }// GEN-LAST:event_deleteButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_insertButtonActionPerformed
        String sujectId = subjectIdTextField.getText();
        String subjectName = subjectNameTextField.getText();
        String score = scoreTextField.getText();
        String studentId = studentIdInput.getText();
        String mes = ScoreManagePanelController.getStudentInsertMessage(studentId, sujectId, subjectName, score);
        JOptionPane.showMessageDialog(this, mes);

        // update table
        updateTable();
    }// GEN-LAST:event_insertButtonActionPerformed


    // update table
    private void updateTable() {
        String studentId = studentIdInput.getText();

        List<List<String>> result = ScoreManagePanelController.getScoreListString(studentId);
        // Set table row count
        DefaultTableModel model = (DefaultTableModel) scoreTable.getModel();
        model.setRowCount(result.size());

        for (int i = 0; i < result.size(); i++) {
            List<String> scoreString = result.get(i);
            // Display order number
            scoreString.add(0, Integer.toString(i + 1));
            for (int j = 0; j < scoreString.size(); j++) {
                String scoreStringElement = scoreString.get(j);
                model.setValueAt(scoreStringElement, i, j);
            }
        }

        String name = ScoreManagePanelController.getname(studentId);
        studentNameTextField.setText(name);
        Float gpa = ScoreManagePanelController.getgpa(studentId);
        String s = Float.toString(gpa);
        gpaTextField.setText(s);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel footerLabel;
    private javax.swing.JLabel gpaLabel;
    private javax.swing.JTextField gpaTextField;
    private javax.swing.JButton insertButton;
    private javax.swing.JTable scoreTable;
    private javax.swing.JScrollPane scoreTableScrollPane;
    private javax.swing.JTextField scoreTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField studentIdInput;
    private javax.swing.JLabel studentIdLabel;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JTextField studentNameTextField;
    private javax.swing.JTextField subjectIdTextField;
    private javax.swing.JTextField subjectNameTextField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
